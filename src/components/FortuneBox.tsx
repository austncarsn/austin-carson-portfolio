import type { ReactElement } from 'react';
import { memo, useState } from 'react';

const FORTUNES = [
    "You will trip over gravity itself and pretend you did it for character development.",
    "A pigeon will look at you like it pays your rent. Challenge it.",
    "Your snack will slap harder than your coping strategies.",
    "Someone nearby is working hard to look busy. Respect the craft.",
    "The Wi-Fi will buffer exactly when your life does.",
    "Tomorrow-you just filed a restraining order against today-you.",
    "Your coffee is the only one here that understands you. Cherish her.",
    "You will accidentally wave at someone. They were waving behind you. Suffer beautifully.",
    "Destiny saw your message and replied \"lol.\"",
    "You are someone else's plot twist, and they are not ready.",
    "Your charger cable survives purely out of spite.",
    "You will witness a stranger match your energy perfectly. Soulmate? No. Chaos twin.",
    "You will laugh during a serious moment. Correct reaction.",
    "Your houseplant absorbed your secrets overnight. It is now dangerous.",
    "You'll typo something and accidentally sound intellectual. Keep the lie alive.",
    "Someone will mispronounce your name. Congratulations, new identity unlocked.",
    "Your playlist shuffle will spiritually attack you.",
    "A tiny inconvenience will become your full biography for 48 hours.",
    "You will invent a new walk today. Others will stare. They are jealous.",
    "Autocorrect betrayed you years ago. Today, it escalates.",
    "Your socks are filing for divorce in the dryer.",
    "A mystery crumb lives inside your keyboard now. Do not disturb it.",
    "You will zone out during the only sentence that mattered. Nice.",
    "Your browser history will remain sealed. As it should.",
    "Someone will trauma-dump and accidentally become your friend.",
    "You'll relate to a meme from 2012. Growth is a myth.",
    "The group chat will combust into drama the moment you step away. Legendary timing.",
    "Your 'five minutes' is now an era. Archaeologists fear you.",
    "A cat will appear where a cat should not be. You will accept this.",
    "You'll understand a joke from 2019 today. Welcome to the future.",
    "Your parallel parking will be studied by performance artists.",
    "A package will arrive that you didn't order. The prophecy begins.",
    "You will remember something humiliating from eight years ago and need to lie down.",
    "Your screen time report will commit a hate crime.",
    "Someone will ask if you're okay. You'll lie. Again.",
    "You will save a file as \"final_FINAL_v4_REALLYfinal_THISONE\". Coward.",
    "A bird will stare into your soul today. It saw your search history.",
    "Your aesthetic will collapse over one tragic Amazon purchase.",
    "You will send a risky text. The typing dots will become your tormentor.",
    "Someone will say \"We should hang out,\" and it will expire instantly.",
    "Your to-do list is now a decorative item.",
    "Someone will wave. You will wave back. You were incorrect. Commit to it.",
    "You will mispronounce a word with chest-level confidence. Never apologize.",
    "Your horoscope and this message were both generated by chaos.",
    "Your main character moment will have no witnesses. Brutal.",
    "You will find $1.37. Do something irresponsible.",
    "Someone will screenshot your message today. Powerful choices were made."
  ];

/**
 * Interactive fortune generator used as a playful CTA for visitors exploring the work section.
 */
const FortuneBox = memo(function FortuneBox(): ReactElement {
  const [currentFortune, setCurrentFortune] = useState('Click to reveal');
  const [isAnimating, setIsAnimating] = useState(false);

  const pickRandomFortune = (): string => {
    const index = Math.floor(Math.random() * FORTUNES.length);
    return FORTUNES[index];
  };

  const revealFortune = (): void => {
    setCurrentFortune(pickRandomFortune());
    setIsAnimating(true);
  };

  const handleAnimationEnd = (): void => {
    setIsAnimating(false);
  };

  return (
    <div className="inline-block">
      <button
        type="button"
        className={`
          relative min-w-[280px] max-w-[400px]
          bg-paper border-2 border-structure
          px-6 py-4 text-left
          transition-all duration-300 ease-in-out
          hover:border-text-primary
          hover:shadow-[4px_4px_0px_0px_var(--brand)]
          focus-visible:outline-none
          focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-var(--brand)
          active:shadow-[2px_2px_0px_0px_var(--brand)]
          active:translate-x-[2px] active:translate-y-[2px]
          ${isAnimating ? 'animate-[shake_0.5s_ease-in-out]' : ''}
        `}
        aria-label="Reveal a fortune message"
        onClick={revealFortune}
        onAnimationEnd={handleAnimationEnd}
      >
        <div className="font-['Satoshi'] tracking-[0.15em] text-[11px] text-text-muted uppercase mb-3">
          Fortune
        </div>
        <p
          className="font-['Satoshi'] text-sm text-text-primary leading-relaxed mb-3 min-h-[60px] flex items-center"
          aria-live="polite"
        >
          {currentFortune}
        </p>
        <div className="font-['Satoshi'] text-xs text-text-muted opacity-60">
          Tap again for another.
        </div>
        <div className="pointer-events-none absolute bottom-4 right-6 h-[2px] w-8 rounded-[1px] bg-brand" />
      </button>
    </div>
  );
});

FortuneBox.displayName = 'FortuneBox';

export default FortuneBox;